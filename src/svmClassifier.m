function [validationAccuracy, validationPredictions, validationScores] = svmClassifier(features, labels, kfold, verbose)
% PolynomialOrder 2 ->Quadratic, 3 -> Cubic
template = templateSVM(...
    'KernelFunction', 'polynomial', ...
    'PolynomialOrder', 2, ...
    'KernelScale', 'auto', ...
    'BoxConstraint', 1, ...
    'Standardize', true);

classificationSVM = fitcecoc(...
    features, ...
    labels, ...
    'Learners', template, ...
    'Coding', 'onevsone', ...
    'ClassNames', categorical({'covid'; 'normal'; 'pneumo'}), 'Verbose', verbose);

partitionedModel = crossval(classificationSVM, 'KFold', kfold);

[validationPredictions, validationScores] = kfoldPredict(partitionedModel);

validationAccuracy = 1 - kfoldLoss(partitionedModel, 'LossFun', 'ClassifError');